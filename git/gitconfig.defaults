# vim: set ft=gitconfig:
[alias]
	a            = add
	aa           = add -A
	aap          = add -A -p
	ac           = !git add -A && git commit -v
	ai           = add -i
	ap           = add -p
	br           = branch --sort=-committerdate
	c            = commit -v
	co           = checkout
	cp           = cherry-pick
	f            = "!f(){ git fork \"isobit-$1\" ; }; f"
	fd           = "!fd(){ git fork \"isobit-$(date -u +'%Y%m%d')-$1\" ; }; fd"
	fork         = checkout -b
	fork-release = "!fr(){ if [ -z ${1:+x} ]; then git fork \"release/$(date -u +'%Y%m%dT%H%MZ')\"; else git fork \"release/$(date -u +'%Y%m%d')-$1\"; fi; }; fr"
	ignore       = "!gi(){ curl -L -s https://www.gitignore.io/api/$@ ; }; gi"
	lg           = log --date=relative --decorate --graph
	lg-utc       = "!lgt() { TZ=UTC git log --date=iso-local --decorate --graph --author-date-order ; }; lgt"
	lgp          = log --date=relative --decorate --patch
	lga          = log --graph --date=relative --decorate --all --oneline --abbrev-commit
	lgaf         = log --graph --date=relative --decorate --all --oneline --abbrev-commit --pretty=format:'%C(auto)%h%d %s %C(black)%an, %cr%Creset'
	patch        = !git --no-pager diff --no-color
	puh          = push -u origin HEAD
	pushfwl      = push --force-with-lease
	prune        = "!git fetch && git remote prune origin && git gc"
	prune-merged = "!pm(){ git branch --merged \"$1\" --format '%(refname:short)' | grep -v \"$1\" | vipe | xargs git branch -d; }; pm"
	st           = status
	show-ignored = "!sig() { git ls-files -i -o --exclude-from=.gitignore | xargs git check-ignore -v; }; sig"
	rm-ignored   = "!rmig() { git ls-files -i -c --exclude-from=.gitignore | xargs git rm --cached; }; rmig"
	fetchbase    = "!fb() { git fetch && git rebase \"$(git symbolic-ref refs/remotes/origin/HEAD)\" ; }; fb"
[core]
	autocrlf       = input
	editor         = vim
	excludesfile   = ~/.gitignore.global
	attributesFile = ~/.gitattributes.global
	ignorecase     = false
	pager          = delta
[color]
	ui = auto
[delta]
	syntax-theme = base16
[diff]
	mnemonicprefix   = true
	renamelimit      = 0
	renames          = copies
	wsErrorHighlight = all
[fetch]
	prune = true
[git-p4]
	detectRenames = true
[grep]
	lineNumber = true
# [init]
#	templatedir = ~/profile/git/template
[pull]
	rebase = true
[push]
	default = simple
[user]
	name  = Josh Glendenning
	email = git@isobit.io
[github]
	user = isobit
