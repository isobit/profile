# vim: set ft=gitconfig:
[alias]
	a            = add
	aa           = add -A
	aap          = add -A -p
	ac           = !git add -A && git commit -v
	acwip        = !git add -A && commit -m "WIP"
	ai           = add -i
	ap           = add -p
	br           = branch --sort=-committerdate
	c            = commit -v
	co           = checkout
	cp           = cherry-pick
	patch        = !git --no-pager diff --no-color
	st           = status

	# branch management
	f            = "!f(){ git fork \"isobit-$1\"; };f"
	fd           = "!f(){ git fork \"isobit-$(date -u +'%Y%m%d')-$1\"; };f"
	fork         = checkout -b
	fork-release = "!f(){ if [ -z ${1:+x} ]; then git fork \"release/$(date -u +'%Y%m%dT%H%MZ')\"; else git fork \"release/$(date -u +'%Y%m%d')-$1\"; fi; };f"

	# log
	lg           = log --date=relative --decorate --graph
	lgv          = log --date=relative --decorate --graph --pretty=fuller
	lgi          = log --date=iso-local --decorate --graph
	lgiv         = log --date=iso-local --decorate --graph --pretty=fuller
	lgiz         = "!TZ=UTC git log --date=iso-local --decorate --graph"
	lgizv        = "!TZ=UTC git log --date=iso-local --decorate --graph --pretty=fuller"
	lgd          = log --graph --pretty=format:'%C(auto)%h %cI %s %d%Creset'
	lgp          = log --date=relative --decorate --patch
	lga          = log --graph --date=relative --decorate --all --oneline --abbrev-commit

	# ignore
	ignore       = "!f(){ curl -L -s \"https://www.gitignore.io/api/$1\"; };f"
	show-ignored = "!git ls-files -i -o --exclude-from=.gitignore | xargs git check-ignore -v"
	rm-ignored   = "!git ls-files -i -c --exclude-from=.gitignore | xargs git rm --cached"

	# remote
	prune        = "!git fetch && git remote prune origin && git gc"
	prune-merged = "!f(){ git branch --merged \"$1\" --format '%(refname:short)' | grep -v \"$1\" | vipe | xargs git branch -d; };f"
	puh          = push -u origin HEAD
	pushfwl      = push --force-with-lease
	r            = "!git fetch && git rebase -i --autosquash \"origin/$(git main)\""
	stashpull    = "!git stash save && git pull && git stash pop"

	# main branch
	main = "!git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4"
	fix-main = remote set-head origin --auto

[core]
	autocrlf       = input
	editor         = vim
	excludesfile   = ~/.gitignore.global
	attributesFile = ~/.gitattributes.global
	ignorecase     = false
	pager          = delta

[color]
	ui = auto

[fetch]
	prune = true

[pull]
	rebase = true

[push]
	default = simple

[grep]
	lineNumber = true

[merge]
	conflictStyle = diff3 # add |||| and original text to conflicts

# ----------------------------------------------------------------------------
# Diff, delta

[interactive]
	diffFilter = "delta --color-only" # use delta for git add --patch

[delta]
	navigate     = true # n/N to move between files
	theme        = 1337
	syntax-theme = base16

[diff]
	colorMoved       = default # color moved lines differently
	mnemonicprefix   = true
	renamelimit      = 0
	renames          = copies
	wsErrorHighlight = all

# ----------------------------------------------------------------------------
# External tools

[git-p4]
	detectRenames = true

# ----------------------------------------------------------------------------
# User config

[user]
	name  = Josh Glendenning
	email = git@isobit.io

[github]
	user = isobit
