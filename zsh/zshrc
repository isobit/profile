# Begin oh-my-zsh config

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
ZSH_THEME="robbyrussell"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# End oh-my-zsh config

# Load localrc for local-only shell config
if [ -e ~/.localrc ]; then
	source ~/.localrc
fi

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt autocd extendedglob
unsetopt beep
bindkey -v
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/Users/joshglendenning/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# ------------------------------------------------
# Silly fixes                                    |
# ------------------------------------------------

alias dus="du -m -d 1 | sort -gr"

# Make these commands ask before clobbering a file. Use -f to override.
alias rm="rm -R -i"


# ------------------------------------------------
# Custom functions                               |
# ------------------------------------------------

# Compile .java, then run its .class
runjava () {
  javac -g $1.java;
  java $1;
}

# Extract function, courtesy of Itai Ferber
extract () {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2)  tar -jxvf $1        ;;
            *.tar.gz)   tar -zxvf $1        ;;
            *.bz2)      bunzip2 $1          ;;
            *.dmg)      hdiutul mount $1    ;;
            *.gz)       gunzip $1           ;;
            *.tar)      tar -xvf $1         ;;
            *.tbz2)     tar -jxvf $1        ;;
            *.tgz)      tar -zxvf $1        ;;
            *.zip)      unzip $1            ;;
            *.Z)        uncompress $1       ;;
            *)          echo "'$1' cannot be extracted/mounted via extract()." ;;
        esac
    else
        echo "'$1' is not a valid file."
    fi
}

# Package tar function
tarz () {
    tar -cvzf $1.tar.gz $1
}

#--------------------------------------------------
# Environment Variables                           |
#--------------------------------------------------
export EDITOR=vim
export VISUAL=vim
export GIT_EDITOR=vim

